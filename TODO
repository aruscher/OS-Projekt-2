Terminieren von Vordergrundprozessen mit ˆC (Strg + C)
⇒ Keinen Einfluss auf Kommandozeile und Hintergrundprozesse
		- 1. SIGINT wird nur bei vordergrundprozessen beachtet, aber shell wird beendet. Programmcode:
				if(!(command->prog.background))
					setup_signal_handler(SIGINT, SIG_DFL); //interrupt default

Abfangen von Signalen und Ausgeben entsprechender Nachrichten

Probem? eingabe ls -l  und danach echo -> "-l" außerdem läuft bei systemProg immer in case 0 UND default
Option A: Pipes / Option B Jobs

Ausführen von Befehlen mit beliebigen Argumenten

Aussagekräftige Fehlermeldungen z.B. bei Syntaxfehlern



Ready:

(+)	Eingabeaufforderung mit Eingabebearbeitung und Befehlshistorie

(+)	Trennen von sequenziellen Befehlen durch Semikolon (;)

(+)	Ausführen von Befehlen standardmäßig im Vordergrund

(+)	Freitext mit einfachen Anführungszeichen (’)

(+)	Kommentarzeilen durch Hash-Zeichen (#)

(+)	Befehle der Kommandozeile
	• exit → Beenden der Konsole
	• cd Pfad → Ändern des Arbeitsverzeichnisses

(+)	Umgebungsvariablen
	• Setzen einer Variablen → setenv Variable Wert
	• Löschen einer Variablen → unsetenv Variable
	• Ersetzen mit Variablenwert → $Variable oder ${Variable}

(?)- scheint inbegriffen:	Escape-Sequenzen mit Backslash (\)

(-)-popen "unschön"		Beenden einer Befehlseingabe durch Und-Zeichen (&)
							⇒ Ausführen des Befehls im Hintergrund

(-)								I/O Umleitung in Datei
	-nur einzeilig				• Einlesen mittels Kleiner-als-Zeichen (<)
	-popen "unschön"			• Ausgeben mittels Größer-als-Zeichen (>)